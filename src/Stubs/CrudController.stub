<?php

namespace Noetic\Plugins\{{pluginName}}\Controllers;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Noetic\Plugins\{{pluginName}}\Models\{{model}};
use Noetic\Plugins\{{pluginName}}\Resources\{{resource}};
use Noetic\Plugins\{{pluginName}}\Requests\{{storeRequestName}};
use Noetic\Plugins\{{pluginName}}\Requests\{{updateRequestName}};

class {{$controllerName}} extends Controller
{
    /**
     * @param Request $request
     * @return \Illuminate\Http\Resources\Json\AnonymousResourceCollection
     */
    public function index(Request $request)
    {
        return {{resource}}::collection({{model}}::search()
            ->paginate()
        );
    }

    /**
     * @param {{storeRequestName}} $request
     * @return \Illuminate\Http\JsonResponse
     */
    public function store({{storeRequestName}} $request)
    {
        $created = {{model}}::create($request->all());

        if($created)
            return response()->json(['data' => 'Created Successfully'], 200);
        else
            return response()->json(['data' => 'Something went wrong'], 400);
    }

    /**
     * @param {{model}} $model
     * @return \Illuminate\Http\JsonResponse
     */
    public function show({{model}} $model)
    {
        return response()->json(['data' => $model], 200);
    }

    /**
     * @param {{updateRequestName}} $request
     * @param {{model}} $model
     * @return \Illuminate\Contracts\Routing\ResponseFactory|Response
     */
    public function update({{updateRequestName}} $request, {{model}} $model)
    {
        $model->update($request->all());
        return response('Updated', Response::HTTP_ACCEPTED);
    }

    /**
     * @param {{model}} $model
     * @return \Illuminate\Http\JsonResponse
     * @throws \Exception
     */
    public function destroy({{model}} $model)
    {
        $model->delete();
        return response(null, Response::HTTP_NO_CONTENT);
    }
}